@startuml
actor Client
participant "TaskController" as TC
participant "IServiceManager" as ISM
participant "TaskService" as TS
participant "TaskRepository" as TR
participant "PagedList<TaskHistory>" as PL
participant "Mapper" as M

Client -> TC : GET /api/tasks/{taskId}/history
activate TC

TC -> ISM : TaskService.GetTaskHistory(taskId, param)
activate ISM

ISM -> TS : GetTaskHistory(taskId, param)
activate TS

TS -> TR : FindTaskHistoryById(taskId, param)
activate TR

TR -> TR : GetByCondition()
TR -> TR : ApplyFilters()
TR -> PL : new PagedList<TaskHistory>()
activate PL
PL --> TR : PagedList<TaskHistory>
deactivate PL

TR --> TS : PagedList<TaskHistory>
deactivate TR

TS -> M : Map<TaskHistoryResponseModel>()
activate M
M --> TS : IEnumerable<TaskHistoryResponseModel>
deactivate M

TS --> ISM : (data, meta)
deactivate TS

ISM --> TC : (data, meta)
deactivate ISM

TC -> TC : Add X-Pagination header
TC --> Client : 200 OK with data
deactivate TC

@enduml