@startuml
actor Client
participant "ProjectController" as PC
participant "IServiceManager" as ISM
participant "ProjectService" as PS
participant "ProjectRepository" as PR
participant "PagedList<JoinRequest>" as PL
participant "Mapper" as M

Client -> PC : GET /api/projects/{projectId}/join-requests
activate PC

PC -> ISM : ProjectService.GetProjectJoinRequests(projectId, param)
activate ISM

ISM -> PS : GetProjectJoinRequests(projectId, param)
activate PS

PS -> PR : FindJoinRequestsForProject(projectId, param)
activate PR

PR -> PR : GetByCondition()
PR -> PR : Search()
PR -> PL : new PagedList<JoinRequest>()
activate PL
PL --> PR : PagedList<JoinRequest>
deactivate PL

PR --> PS : PagedList<JoinRequest>
deactivate PR

PS -> M : Map<JoinRequestResponseModel>()
activate M
M --> PS : IEnumerable<JoinRequestResponseModel>
deactivate M

PS --> ISM : (data, meta)
deactivate PS

ISM --> PC : (data, meta)
deactivate ISM

PC -> PC : Add X-Pagination header
PC --> Client : 200 OK with data
deactivate PC

@enduml