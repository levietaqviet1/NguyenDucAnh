@startuml Sequence Diagram

actor Client
participant "AuthenticationController" as Controller
participant "ValidationFilterAttribute" as ValidationFilter
participant "AuthenticationService" as AuthService
participant "MailService" as MailService
participant "UserManager" as UserManager
participant "SmtpClient" as SmtpClient

Client -> Controller : POST /api/forgotPassword
activate Controller

Controller -> ValidationFilter : Validate request
activate ValidationFilter
ValidationFilter --> Controller : Validation result
deactivate ValidationFilter

Controller -> AuthService : ForgotPassword(email)
activate AuthService

AuthService -> UserManager : FindByEmailAsync(email)
activate UserManager
UserManager --> AuthService : User
deactivate UserManager

AuthService -> AuthService : GeneratePassword(12)
activate AuthService
AuthService --> AuthService : New password
deactivate AuthService

AuthService -> UserManager : GeneratePasswordResetTokenAsync(user)
activate UserManager
UserManager --> AuthService : Reset token
deactivate UserManager

AuthService -> UserManager : ResetPasswordAsync(user, token, newPassword)
activate UserManager
UserManager --> AuthService : Reset result
deactivate UserManager

AuthService --> Controller : New password
deactivate AuthService

Controller -> MailService : SendMailToUser(email, content, header)
activate MailService

MailService -> UserManager : FindByEmailAsync(email)
activate UserManager
UserManager --> MailService : User
deactivate UserManager

MailService -> MailService : SendMailGmailSmtp(from, to, subject, body)
activate MailService

MailService -> SmtpClient : SendMailAsync(message)
activate SmtpClient
SmtpClient --> MailService : Send result
deactivate SmtpClient

MailService --> Controller : Send result
deactivate MailService

alt Mail sent successfully
    Controller --> Client : 200 OK (Success message)
else Mail sending failed
    Controller --> Client : 400 Bad Request (Error message)
end

deactivate Controller

@enduml