@startuml
class TaskListController {
  +DeleteTaskList(int id): Task<IActionResult>
}

interface IServiceManager {
  +TaskListService: ITaskListService
}

interface ITaskListService {
  +DeleteTaskList(int id): Task<void>
}

class TaskListService {
  -_repository: IRepositoryManager
  -_logger: ILoggerManager
  +DeleteTaskList(int id): Task<void>
}

interface IRepositoryManager {
  +TaskListRepository: ITaskListRepository
}

interface ITaskListRepository {
  +GetTaskListById(int id): Task<TaskList>
  +DeleteTaskList(TaskList taskList): Task<void>
}

class TaskListRepository {
  +GetTaskListById(int id): Task<TaskList>
  +DeleteTaskList(TaskList taskList): Task<void>
}

class TaskList {
  +Id: int
  +Name: string
  +IsDeleted: bool
  +MarkAsDeleted(): void
}

class NotFoundException {
}

TaskListController --> IServiceManager
IServiceManager --> ITaskListService
TaskListService ..|> ITaskListService
TaskListService --> IRepositoryManager
IRepositoryManager --> ITaskListRepository
TaskListRepository ..|> ITaskListRepository
TaskListRepository --> TaskList
TaskListService ..> NotFoundException

@enduml