@startuml Class Diagram

interface IServiceManager {
    +AccountService: IAccountService
    +AuthenticationService: IAuthenticationService
    +MailService: IMailService
    +FileService: IFileService
    +NewsService: INewsService
    +NotificationService: INotificationService
    +ScheduleService: IScheduleService
    +TaskService: ITaskService
}

interface IAuthenticationService {
    +ForgotPassword(email: string): Task<string>
}

class AuthenticationService {
    -_userManager: UserManager<TUser>
    +ForgotPassword(email: string): Task<string>
    -GeneratePassword(length: int): string
}

interface IMailService {
    +SendMailToUser(email: string, content: string, header: string): Task<bool>
}

class MailService {
    -_userManager: UserManager<TUser>
    -_logger: ILogger
    -_Mail: string
    +SendMailToUser(email: string, content: string, header: string): Task<bool>
    -SendMailGmailSmtp(from: string, to: string, subject: string, body: string): Task<bool>
    -SendMail(from: string, to: string, subject: string, body: string, client: SmtpClient): Task<bool>
}

class UserManager<TUser> {
    +FindByEmailAsync(email: string): Task<TUser>
    +GeneratePasswordResetTokenAsync(user: TUser): Task<string>
    +ResetPasswordAsync(user: TUser, token: string, newPassword: string): Task<IdentityResult>
}

class AuthenticationController {
    -_service: IServiceManager
    +ForgotPassword(model: ForgotPasswordRequestModel): Task<IActionResult>
}

class ValidationFilterAttribute {
}

IServiceManager <|.. ServiceManager
IAuthenticationService <|.. AuthenticationService
IMailService <|.. MailService

AuthenticationController --> IServiceManager
AuthenticationController ..> ValidationFilterAttribute

AuthenticationService --> UserManager
MailService --> UserManager

@enduml