@startuml Class Diagram

interface IServiceManager {
    +AccountService: IAccountService
    +AuthenticationService: IAuthenticationService
    +MailService: IMailService
    +FileService: IFileService
    +NewsService: INewsService
    +NotificationService: INotificationService
    +ScheduleService: IScheduleService
    +TaskService: ITaskService
}

class ServiceManager {
    -_accountService: IAccountService
    -_authenticationService: IAuthenticationService
    -_mailService: IMailService
    -_fileService: IFileService
    -_newsService: INewsService
    -_notificationService: INotificationService
    -_scheduleService: IScheduleService
    -_taskService: ITaskService
}

interface IAccountService {
    +GetUserByEmail(email: string, verified: bool): Task<AccountReturnModel>
}

class AccountService {
    -_repository: IRepositoryManager
    -_mapper: IMapper
    -_userManager: UserManager<Account>
    +GetUserByEmail(email: string, verified: bool): Task<AccountReturnModel>
}

interface IMailService {
    +VerifyEmailOtp(email: string, auCode: string): bool
}

class MailService {
    -_cache: IMemoryCache
    +VerifyEmailOtp(email: string, auCode: string): bool
    -IsValidEmail(email: string): bool
    -GetVerifyEmailKey(email: string): string
}

class AuthenticationController {
    -_service: IServiceManager
    +VerifyEmail(model: MailRequestModel): Task<IActionResult>
}


IServiceManager <|.. ServiceManager
IAccountService <|.. AccountService
IMailService <|.. MailService

ServiceManager --> IAccountService
ServiceManager --> IMailService

AuthenticationController --> IServiceManager

@enduml